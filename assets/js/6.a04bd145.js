(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{156:function(e,a,t){"use strict";t.r(a);var i=t(0),n=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"offline-first-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#offline-first-application","aria-hidden":"true"}},[e._v("#")]),e._v(" Offline First Application")]),t("p",[e._v("Long time no see guys. Today I want to write about how I write an Android application that can be used in offline mode but still need to store data in server when internet connection is available.")]),t("p",[e._v("The example use case is "),t("em",[e._v("Point of Sales")]),e._v(" app. This kind of application is used by cashier to record the transactions happened in offline store.\nThe application has to work even when there are no internet connection available because customer is not expected to wait too long.")]),t("p",[e._v("What is the scenario?")]),t("ol",[t("li",[e._v("When creating order and transaction, we have to assume "),t("strong",[e._v("no internet connection is available")]),e._v(" so we need to store the order and transaction data in local storage first.")]),t("li",[e._v("After the order and transaction data are saved into local storage, then we can sync the data to our backend (if needed) immediately using background worker so it doesn't affect UI because cashier may have another customers to serve.")]),t("li",[e._v("When step number 2 is failed we can set the worker to retry using exponential backoff so it won't affect backend too much when backend is having problems and already up again.")]),t("li",[e._v("Last backup, we have scheduled worker that checks if there are "),t("em",[e._v("unsynced")]),e._v(" transactions every xx hours.")])]),t("p",[e._v("How can we achieve this?")]),t("p",[e._v("Code-wise, we'll divide the thing into two layers.")]),t("ul",[t("li",[e._v("Data layer. In this layer, we define how data is saved into SQLite DB.")]),t("li",[e._v("Domain / Use Case. In this layer, we define the business use case that may depends on several queries on data layer. Several examples:")])]),t("h2",{attrs:{id:"offline-storage-data-layer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#offline-storage-data-layer","aria-hidden":"true"}},[e._v("#")]),e._v(" Offline Storage - Data Layer")]),t("p",[e._v("Firstly, we need to decide which "),t("em",[e._v("offline storage")]),e._v(" solution that we want to use. Android app can use default SQL based solution provided by SQLite as the local storage.\nIn this use case, we decide to use SQLite because order and transaction data is structured so it's easier to use SQL based solution which is SQLite.")]),t("p",[e._v("In this use case, we define that we need to store data in two tables: "),t("code",[e._v("orders")]),e._v(" and "),t("code",[e._v("transactions")]),e._v(".")]),t("ul",[t("li",[e._v("Order data\n"),t("ul",[t("li",[e._v("order id or order number")]),t("li",[e._v("created at timestamp")]),t("li",[e._v("order items")]),t("li",[e._v("order status")])])]),t("li",[e._v("Transactions data include\n"),t("ul",[t("li",[e._v("transaction id")]),t("li",[e._v("order id")]),t("li",[e._v("paid amount")]),t("li",[e._v("payment type")]),t("li",[e._v("paid at timestamp")])])])]),t("h2",{attrs:{id:"background-worker-data-layer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#background-worker-data-layer","aria-hidden":"true"}},[e._v("#")]),e._v(" Background Worker - Data Layer")]),t("p",[e._v("There are some libraries we can use to create a worker, but now I will just provide how to define the worker suited in our use cases.")]),t("p",[e._v("We need to define some worker to sync our data:")]),t("ul",[t("li",[e._v("Sync order worker\n"),t("ul",[t("li",[e._v("Order id is provided")]),t("li",[e._v("Worker will query to local database to get the order data based on order id")]),t("li",[e._v("Format it into JSON")]),t("li",[e._v("Sync JSON formatted data into backend")]),t("li",[e._v("Flag it to "),t("code",[e._v("synced")]),e._v(" so it doesn't need to be synced again.")])])]),t("li",[e._v("Sync transaction worker\n"),t("ul",[t("li",[e._v("Transaction id is provided")]),t("li",[e._v("Worker will query to local database to get the transaction data based on transaction id")]),t("li",[e._v("Format it into JSON")]),t("li",[e._v("Sync JSON formatted data into backend")]),t("li",[e._v("Flag it to "),t("code",[e._v("synced")]),e._v(" so it doesn't need to be synced again.")])])]),t("li",[e._v("Scheduled data sync worker.\n"),t("ul",[t("li",[e._v("Every "),t("code",[e._v("xx")]),e._v(" hours the worker will check if there are "),t("em",[e._v("unsynced order and transaction data")])]),t("li",[e._v("Format it into JSON")]),t("li",[e._v("Sync JSON formatted data into backend")]),t("li",[e._v("Flag it to "),t("code",[e._v("synced")]),e._v(" so it doesn't need to be synced again.")])])])]),t("h2",{attrs:{id:"use-cases-domain-layer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use-cases-domain-layer","aria-hidden":"true"}},[e._v("#")]),e._v(" Use Cases / Domain Layer")]),t("p",[e._v("We can compose a business use case using several data layer functions. Some examples:")]),t("ul",[t("li",[e._v("Create pending order\n"),t("ol",[t("li",[e._v("Create a row in "),t("code",[e._v("orders")]),e._v(" table with "),t("code",[e._v("pending")]),e._v(" status")]),t("li",[e._v("Sync pending order data into backend using "),t("code",[e._v("order worker")])])])]),t("li",[e._v("Save paid order\n"),t("ol",[t("li",[e._v("Update order status from "),t("code",[e._v("pending")]),e._v(" into "),t("code",[e._v("fulfilled")])]),t("li",[e._v("Sync fulfilled order data into backend using "),t("code",[e._v("sync order worker")])]),t("li",[e._v("Create a row in "),t("code",[e._v("transactions")]),e._v(" table with "),t("code",[e._v("paid")]),e._v(" status with related "),t("code",[e._v("order id")]),e._v(" in "),t("code",[e._v("orders")]),e._v(" table.")]),t("li",[e._v("Sync paid transaction data into backend using "),t("code",[e._v("sync transaction worker")])])])])]),t("p",[e._v("That's my idea about how we can achieve the *offline first application`. I will write some code examples in my next post. See you ðŸ˜ƒ")])])}],!1,null,null,null);a.default=n.exports}}]);